// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b1W5dJMGgkpaNQ8tnw9w16
// Component: joLXbiD8fzxcE
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: NgjCtkSebNh_Wd/component
import Button from "../../Button"; // plasmic-import: Yq2ESkcU0XWwK/component
import Feature from "../../Feature"; // plasmic-import: Fa0q6o_R7J/component
import CtaBlock from "../../CtaBlock"; // plasmic-import: hfYEn7aiEGtW6/component
import { useScreenVariants as useScreenVariantsmr1DC3TQ6PZvo } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: mr1D-c3tQ6PZvo/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_bayo.module.css"; // plasmic-import: b1W5dJMGgkpaNQ8tnw9w16/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: joLXbiD8fzxcE/css
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: MmDAz6lx2B/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsmr1DC3TQ6PZvo()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />

        <title key="title">
          {"Bayo - Effective booking system built on Mobile money"}
        </title>

        <meta
          key="og:title"
          property="og:title"
          content={"Bayo - Effective booking system built on Mobile money"}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Bayo - Effective booking system built on Mobile money"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              sty.root
            )}
          >
            <div className={classNames(projectcss.all, sty.freeBox__m4Yhq)}>
              <div className={classNames(projectcss.all, sty.freeBox___1EiBg)}>
                <Header2
                  data-plasmic-name={"header2"}
                  data-plasmic-override={overrides.header2}
                  className={classNames("__wab_instance", sty.header2)}
                />

                <div className={classNames(projectcss.all, sty.freeBox__nBfk)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pZghI)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__e4R4K)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eacNo
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1___5YiyI
                          )}
                        >
                          {
                            "The simplest an cutest way to run your tour business in west africa"
                          }
                        </h1>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nj5Yk
                          )}
                        >
                          {
                            "Bayo is the best online booking and management software for tour and activity hustle, we go beyond software by saving you money and helping you grow your business."
                          }
                        </div>

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button___2K6B
                          )}
                          color={"yellow"}
                          link={"https://tally.so/r/3EkDO4"}
                        >
                          {"Get early access"}
                        </Button>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__b526B)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sunvk)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lf6W1
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Created for the simple \nand lazy part of you"
                        : "Created for the simple \nand lazy part of you"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yHyO2
                      )}
                    >
                      {
                        "We really mean it! If you like to work absolutely hard, then Bayo isn’t for you. It was built to be intuitive and really easy to use "
                      }
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__c7VwC)}
                  >
                    {true ? (
                      <Feature
                        className={classNames(
                          "__wab_instance",
                          sty.feature__to4P
                        )}
                        slot={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6GTvk
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "We really mean it! If you like to work absolutely hard, then Bayo isn’t for you. It was built to be intuitive and really easy to use "
                              : "We really mean it! If you like to work absolutely hard, then Bayo isn’t for you. It was built to be intuitive and really easy to use "}
                          </div>
                        }
                      />
                    ) : null}

                    {true ? (
                      <Feature
                        className={classNames(
                          "__wab_instance",
                          sty.feature__u5Jpu
                        )}
                        slot={
                          "Bayo is as mobile as you are in your business. We are built from the ground up to work effortless on your mobile devices.  "
                        }
                      >
                        {"Insta Mobile sees it first."}
                      </Feature>
                    ) : null}

                    {true ? (
                      <Feature
                        className={classNames(
                          "__wab_instance",
                          sty.feature__sixoL
                        )}
                        slot={
                          "An average of 40% of online reservations are made outside of business hours.\nDon’t miss a booking because you’re not by the phone. By offering real-time availability 24/7, you can capture every potential customer, even when you’re away eating that jollof rice or banging to that new Burna Boy song."
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__didKs
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Get bookings while you sleep."
                            : "Get bookings while you sleep."}
                        </div>
                      </Feature>
                    ) : null}

                    {true ? (
                      <Feature
                        className={classNames(
                          "__wab_instance",
                          sty.feature__j9LEx
                        )}
                        slot={
                          "Even when you have a wonderful bestie, you still want to interact with the rest of the world. Bayo can talk with other powerful tool to give even more power. \nExport data and automate workflows through Zapier, Mailchimp, Sendinblue, Google analytics, Notion and more."
                        }
                      >
                        {
                          "Connect effortlessly with existing powerful marketing tool."
                        }
                      </Feature>
                    ) : null}

                    {true ? (
                      <Feature
                        className={classNames(
                          "__wab_instance",
                          sty.feature__uYcHw
                        )}
                        slot={
                          "Integrating Bayo inside your existing marketing stack is quick and easy. No need for a developper. When you’re ready to go live, hit a button and share your booking link or embed your booking page everywhere interesting."
                        }
                      >
                        {"Set it up once. Share it everywhere."}
                      </Feature>
                    ) : null}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__tf2Ki)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lsglb)}
                  >
                    <p.PlasmicImg
                      data-plasmic-name={"img"}
                      data-plasmic-override={overrides.img}
                      alt={""}
                      className={classNames(sty.img)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"160px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/bayo/images/image2.svg",
                        fullWidth: 300,
                        fullHeight: 125,
                        aspectRatio: 2.4
                      }}
                    />

                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__nkGMg
                      )}
                    >
                      {"Bayo want to make your \nbusiness less stressful. "}
                    </h1>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__vRjgO
                      )}
                      color={"yellow"}
                      link={"https://tally.so/r/3EkDO4"}
                    >
                      {"Get early access"}
                    </Button>
                  </div>

                  <Icon3Icon
                    data-plasmic-name={"svg"}
                    data-plasmic-override={overrides.svg}
                    className={classNames(projectcss.all, sty.svg)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>

            {true ? (
              <CtaBlock
                data-plasmic-name={"ctaBlock"}
                data-plasmic-override={overrides.ctaBlock}
                className={classNames("__wab_instance", sty.ctaBlock)}
              />
            ) : null}
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header2", "img", "svg", "ctaBlock"],
  header2: ["header2"],
  img: ["img"],
  svg: ["svg"],
  ctaBlock: ["ctaBlock"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header2: makeNodeComponent("header2"),
    img: makeNodeComponent("img"),
    svg: makeNodeComponent("svg"),
    ctaBlock: makeNodeComponent("ctaBlock"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
