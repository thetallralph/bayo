// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: b1W5dJMGgkpaNQ8tnw9w16
// Component: -Vsavq-UUH0ex
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: _ihQLPOfY-ioqo/component
import Button from "../../Button"; // plasmic-import: Yq2ESkcU0XWwK/component
import HeroSection from "../../HeroSection"; // plasmic-import: qmLemEt8qQi_5q/component
import Footer from "../../Footer"; // plasmic-import: nPWtbdphoKXz__/component
import { useScreenVariants as useScreenVariantsmr1DC3TQ6PZvo } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: mr1D-c3tQ6PZvo/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_bayo.module.css"; // plasmic-import: b1W5dJMGgkpaNQ8tnw9w16/projectcss
import sty from "./PlasmicFeatures.module.css"; // plasmic-import: -Vsavq-UUH0ex/css
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: t8OtyGHWCsjrsj/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: mhLHT-jYtpysfY/icon

export const PlasmicFeatures__VariantProps = new Array();

export const PlasmicFeatures__ArgProps = new Array();

function PlasmicFeatures__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsmr1DC3TQ6PZvo()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanner"}
            data-plasmic-override={overrides.pageBanner}
            className={classNames(projectcss.all, sty.pageBanner)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__ddnwm)}>
              <p.Stack
                as={"div"}
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__ceEaB)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___2T4Ax)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Our Features "}
                    </h1>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5K7L9
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,"
                      }
                    </div>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__thVqU)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cukRf)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? {
                            src: "/plasmic/bayo/images/_3Thumbjpg.jpeg",
                            fullWidth: 700,
                            fullHeight: 466,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/bayo/images/williamHook9E9Pd9BlAtoUnsplashjpg.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }
                    }
                  />
                </div>
              </p.Stack>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__wmk7G)}>
            <p.Stack
              as={"section"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oTuOb)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__dnHrS
                    )}
                  >
                    {"The standard Lorem Ipsum passage"}
                  </h3>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hyzre
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v0Dr
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>
                </p.Stack>

                <div
                  className={classNames(projectcss.all, sty.freeBox___0T4J3)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__n0UjR)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__agcJm
                      )}
                    >
                      {"Built on capability"}
                    </h5>

                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__bm4NZ)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__iDv7K)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__rrqHk
                      )}
                    >
                      {"Highly energetic"}
                    </h5>

                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__nSjl)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__bVzv6)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__rw3Ox
                      )}
                    >
                      {"100% transparency and accountability"}
                    </h5>

                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__jAQzV)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__rXig9)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__owV5B
                      )}
                    >
                      {"Refreshing clarity"}
                    </h5>

                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__g5IP)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__etCkz)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__kthtL
                      )}
                    >
                      {"Modern results"}
                    </h5>

                    <Icon16Icon
                      className={classNames(projectcss.all, sty.svg__ysMj7)}
                      role={"img"}
                    />
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__c7Cqv)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__beN)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__jn15D)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vNsko)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sc8Ri)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"copy"}
                        data-plasmic-override={overrides.copy}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.copy)}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mopJg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6Db6Y
                            )}
                          >
                            {"Welcome"}
                          </div>

                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__uu0Qx
                            )}
                          >
                            {"The standard Lorem "}
                          </h3>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bZcLs
                            )}
                          >
                            {
                              "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                            }
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gMgl
                          )}
                        >
                          <Button
                            data-plasmic-name={"button"}
                            data-plasmic-override={overrides.button}
                            className={classNames("__wab_instance", sty.button)}
                            color={"blue"}
                            endIcon={
                              <ArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__phwYo
                                )}
                                role={"img"}
                              />
                            }
                            shape={"rounded"}
                            showEndIcon={true}
                          >
                            {"Start Now"}
                          </Button>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    data-plasmic-name={"art"}
                    data-plasmic-override={overrides.art}
                    className={classNames(projectcss.all, sty.art)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oPp0P)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={
                        "https://images.unsplash.com/photo-1520333789090-1afc82db536a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2851&q=80"
                      }
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__skarB)}
                    />
                  </div>
                </div>
              </p.Stack>
            </div>
          </div>

          <HeroSection
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames("__wab_instance", sty.heroSection)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanner",
    "columns",
    "h1",
    "section",
    "foreground",
    "copy",
    "button",
    "art",
    "heroSection",
    "footer"
  ],

  header: ["header"],
  pageBanner: ["pageBanner", "columns", "h1"],
  columns: ["columns", "h1"],
  h1: ["h1"],
  section: ["section", "foreground"],
  foreground: ["foreground"],
  copy: ["copy", "button"],
  button: ["button"],
  art: ["art"],
  heroSection: ["heroSection"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFeatures__ArgProps,
          internalVariantPropNames: PlasmicFeatures__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicFeatures__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFeatures";
  } else {
    func.displayName = `PlasmicFeatures.${nodeName}`;
  }
  return func;
}

export const PlasmicFeatures = Object.assign(
  // Top-level PlasmicFeatures renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanner: makeNodeComponent("pageBanner"),
    columns: makeNodeComponent("columns"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    foreground: makeNodeComponent("foreground"),
    copy: makeNodeComponent("copy"),
    button: makeNodeComponent("button"),
    art: makeNodeComponent("art"),
    heroSection: makeNodeComponent("heroSection"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicFeatures
    internalVariantProps: PlasmicFeatures__VariantProps,
    internalArgProps: PlasmicFeatures__ArgProps
  }
);

export default PlasmicFeatures;
/* prettier-ignore-end */
